import OpenAI from 'openai';

// Create a mock OpenAI client for development
class MockOpenAI {
  chat = {
    completions: {
      create: async ({ messages, stream }: any) => {
        // This is a mock implementation that simulates streaming responses
        if (stream) {
          // Create a mock stream
          const mockStream = {
            async* [Symbol.asyncIterator]() {
              const userMessage = messages.find((m: any) => m.role === 'user')?.content || '';
              const responseChunks = generateMockResponse(userMessage);

              // Simulate streaming by yielding chunks with delays
              for (const chunk of responseChunks) {
                yield {
                  choices: [
                    {
                      delta: {
                        content: chunk,
                      },
                    },
                  ],
                };

                // Add a small delay to simulate streaming
                await new Promise(resolve => setTimeout(resolve, 100));
              }
            },
          };

          return mockStream;
        } else {
          // Non-streaming response
          const userMessage = messages.find((m: any) => m.role === 'user')?.content || '';
          const fullResponse = generateMockResponse(userMessage).join('');

          return {
            choices: [
              {
                message: {
                  content: fullResponse,
                },
              },
            ],
          };
        }
      },
    },
  };
}

// Helper function to generate mock responses based on the input
function generateMockResponse(input: string): string[] {
  // Check what kind of response to generate based on the input
  if (input.includes('research') || input.includes('SWOT')) {
    return mockResearchResponse();
  } else if (input.includes('questionnaire')) {
    return mockQuestionnaireResponse();
  } else if (input.includes('proposal')) {
    return mockProposalResponse();
  } else {
    // Default response
    return [
      'I understand your request. ',
      'Here is a response based on the information provided. ',
      'This is a mock response for development purposes. ',
      'In a production environment, this would be generated by the OpenAI API.',
    ];
  }
}

// Mock research response
function mockResearchResponse(): string[] {
  return [
    '# Preliminary Market Research\n\n',
    '## Market Landscape\n',
    'The current market shows significant growth potential in this sector. Key trends include:\n\n',
    '- Increasing adoption of digital solutions\n',
    '- Growing demand for integrated platforms\n',
    '- Rising focus on data security and privacy\n',
    '- Shift towards cloud-based solutions\n\n',

    '## Competitor Analysis\n\n',
    '### Major Competitors:\n',
    '1. **Company A** - Market leader with 35% market share, known for robust feature set\n',
    '2. **Company B** - Focuses on user experience, popular among small businesses\n',
    '3. **Company C** - Enterprise-focused solution with strong security features\n',
    '4. **Company D** - New entrant with innovative AI capabilities\n\n',

    '## SWOT Analysis\n\n',
    '### Strengths:\n',
    '- Unique value proposition in [specific area]\n',
    '- Strong technical expertise\n',
    '- Agile development methodology\n',
    '- Existing customer relationships\n\n',

    '### Weaknesses:\n',
    '- Limited market presence compared to established players\n',
    '- Resource constraints\n',
    '- Narrower feature set in certain areas\n',
    '- Limited geographic reach\n\n',

    '### Opportunities:\n',
    '- Growing market segment with 15% YoY growth\n',
    '- Underserved mid-market customers\n',
    '- Potential for strategic partnerships\n',
    '- Emerging technologies that can be leveraged\n\n',

    '### Threats:\n',
    '- Intense competition from established players\n',
    '- Rapidly changing regulatory environment\n',
    '- Potential economic downturn affecting client budgets\n',
    '- Fast-evolving technology landscape requiring continuous adaptation\n\n',

    '## Recommendations\n\n',
    'Based on this analysis, we recommend:\n\n',
    '1. Focus on differentiating through [specific feature/approach]\n',
    '2. Target the mid-market segment where competition is less intense\n',
    '3. Develop strategic partnerships to expand reach\n',
    '4. Invest in continuous innovation to stay ahead of market trends\n',
  ];
}

// Mock questionnaire response
function mockQuestionnaireResponse(): string[] {
  return [
    '# Client Meeting Questionnaire\n\n',
    '## Business Background\n\n',
    '1. Can you provide a brief overview of your company\'s history and core business?\n',
    '2. What are your primary products/services?\n',
    '3. Who are your target customers/market segments?\n',
    '4. What is your current market position relative to competitors?\n',
    '5. What are your key differentiators in the market?\n\n',

    '## Project Context\n\n',
    '6. What specific business challenges are you trying to address with this project?\n',
    '7. Have you attempted to solve these challenges before? If yes, what approaches did you try?\n',
    '8. How does this project align with your overall business strategy?\n',
    '9. What would success look like for this project?\n',
    '10. Are there any specific metrics you\'ll use to measure success?\n\n',

    '## Technical Requirements\n\n',
    '11. What existing systems will this project need to integrate with?\n',
    '12. Do you have any specific technology preferences or constraints?\n',
    '13. What are your data security and compliance requirements?\n',
    '14. What is your current technical infrastructure?\n',
    '15. Do you have internal technical resources who will be involved in the project?\n\n',

    '## Budget and Timeline\n\n',
    '16. What is your budget range for this project?\n',
    '17. Are there any specific budget constraints or considerations we should be aware of?\n',
    '18. What is your desired timeline for implementation?\n',
    '19. Are there any critical deadlines or milestones we need to consider?\n',
    '20. How flexible is your timeline?\n\n',

    '## Stakeholders and Decision Making\n\n',
    '21. Who are the key stakeholders for this project?\n',
    '22. What is the decision-making process for project approvals?\n',
    '23. Who will be the primary point of contact for the project?\n',
    '24. Who will be responsible for sign-offs at various stages?\n',
    '25. How would you prefer to handle change requests during the project?\n\n',

    '## Risk Assessment\n\n',
    '26. What do you see as the biggest risks to project success?\n',
    '27. Are there any organizational changes expected during the project timeline?\n',
    '28. What dependencies might impact the project?\n',
    '29. Are there any regulatory or compliance issues that could affect the project?\n',
    '30. What contingency plans should we consider?\n',
  ];
}

// Mock proposal response
function mockProposalResponse(): string[] {
  return [
    '# Project Proposal\n\n',
    '## Executive Summary\n\n',
    'This proposal outlines our approach to addressing [Client Name]\'s needs for [Project Goal]. Our solution will provide a comprehensive, scalable platform that addresses current challenges while positioning for future growth.\n\n',

    '## Understanding of Requirements\n\n',
    'Based on our discussions and analysis, we understand that [Client Name] is seeking to:\n\n',
    '- Improve operational efficiency through automation\n',
    '- Enhance data visibility and reporting capabilities\n',
    '- Integrate disparate systems into a unified platform\n',
    '- Scale operations while maintaining security and compliance\n\n',

    '## Proposed Solution\n\n',
    'We propose a phased implementation approach:\n\n',
    '### Phase 1: Discovery and Planning (2 weeks)\n',
    '- Detailed requirements gathering\n',
    '- Technical architecture design\n',
    '- Project plan development\n',
    '- Risk assessment and mitigation planning\n\n',

    '### Phase 2: Core Development (8 weeks)\n',
    '- Database design and implementation\n',
    '- API development\n',
    '- Core functionality implementation\n',
    '- Integration with existing systems\n\n',

    '### Phase 3: Testing and Refinement (4 weeks)\n',
    '- Comprehensive testing (unit, integration, system)\n',
    '- User acceptance testing\n',
    '- Performance optimization\n',
    '- Security auditing\n\n',

    '### Phase 4: Deployment and Training (2 weeks)\n',
    '- Production deployment\n',
    '- User training\n',
    '- Documentation\n',
    '- Knowledge transfer\n\n',

    '## Implementation Roadmap\n\n',
    '```\n',
    'Week 1-2:   Discovery and Planning\n',
    'Week 3-10:  Core Development\n',
    'Week 11-14: Testing and Refinement\n',
    'Week 15-16: Deployment and Training\n',
    '```\n\n',

    '## Team Structure\n\n',
    'Our project team will consist of:\n\n',
    '- Project Manager: Overall project coordination and client communication\n',
    '- Business Analyst: Requirements gathering and documentation\n',
    '- Solution Architect: Technical design and oversight\n',
    '- Senior Developers (2): Core development and integration\n',
    '- QA Engineer: Testing and quality assurance\n',
    '- UX Designer: User interface design and usability\n\n',

    '## Investment\n\n',
    'The estimated investment for this project is as follows:\n\n',
    '- Phase 1: $XX,XXX\n',
    '- Phase 2: $XX,XXX\n',
    '- Phase 3: $XX,XXX\n',
    '- Phase 4: $XX,XXX\n',
    '- Total: $XXX,XXX\n\n',

    '## Next Steps\n\n',
    '1. Proposal review and feedback\n',
    '2. Contract finalization\n',
    '3. Project kickoff meeting\n',
    '4. Begin Phase 1 activities\n\n',

    'We look forward to partnering with [Client Name] on this important initiative and are confident in our ability to deliver exceptional results that meet your business objectives.',
  ];
}

// Determine whether to use the real OpenAI client or the mock one
const useMock = process.env.NODE_ENV === 'development'
  && (typeof process.env.OPENAI_API_KEY === 'undefined' || process.env.OPENAI_API_KEY === '');

// Create a singleton instance of the OpenAI client or use the mock
// This should only be used server-side now
export const openai = useMock
  ? new MockOpenAI() as unknown as OpenAI
  : new OpenAI({
    apiKey: process.env.OPENAI_API_KEY,
  });
